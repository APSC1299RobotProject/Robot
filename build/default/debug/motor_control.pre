
# 1 "motor_control.c"

# 65 "sumovore.h"
extern unsigned int threshold;

# 75
struct sensors
{
unsigned Right:1;
unsigned CntRight:1;
unsigned Center:1;
unsigned CntLeft:1;
unsigned Left:1;
unsigned :3;
};

union sensor_union
{
struct
{
unsigned B:5;
unsigned :3;
};
struct sensors b;
};

void initialization(void);

unsigned int adc(unsigned char channel);

enum motor_speed_setting { rev_fast, rev_medium, rev_slow, stop, slow, medium, fast };

enum motor_selection { left, right };

void set_motor_speed(enum motor_selection the_motor, enum motor_speed_setting motor_speed, int speed_modifier);

void motors_brake_all( void );
void set_leds(void);
void check_sensors(void);
void LVtrap(void);

extern union sensor_union SeeLine;

# 1 "motor_control.h"
void motor_control(void);

# 9 "Common/osc.h"
void set_osc_32MHz(void);
void set_osc_16MHz(void);
void set_osc_8MHz(void);
void set_osc_4MHz(void);
void set_osc_2MHz(void);
void set_osc_1MHz(void);
void set_osc_500kHz(void);
void set_osc_250kHz(void);
void set_osc_125kHz(void);
void set_osc_31kHz(void);

# 6 "motor_control.c"
void follow_simple_curves(void);
void no_track(void);
void spin_left(void);
void turn_left(void);
void straight_fwd(void);
void turn_right(void);
void spin_right(void);
void tightTurn(void);




void motor_control(void)
{


switch(SeeLine.B)
{
case 0b00100u:
case 0b00010u:
case 0b01000u:
case 0b00001u:
case 0b10000u:

follow_simple_curves();
break;
case 0b00000u:

follow_simple_curves();
motors_brake_all();
break;
default: break;
}
}
void tightTurn(void){
if (SeeLine.b.Center){
if (SeeLine.b.Left&&!SeeLine.b.CntLeft){
straight_fwd();
if (SeeLine.b.CntLeft){
straight_fwd();
if (SeeLine.B){

follow_simple_curves();
} else {
spin_left();
if(SeeLine.B) follow_simple_curves();
}

}

}
if (SeeLine.b.Right&&!SeeLine.b.CntRight){
straight_fwd();
if (SeeLine.b.CntRight){
straight_fwd();
if (SeeLine.B){

follow_simple_curves();
} else {
spin_right();
if(SeeLine.B) follow_simple_curves();
}
}
}
}
}

void follow_simple_curves(void)
{

if ( SeeLine.b.Center ) straight_fwd();
else if (SeeLine.b.Left) spin_left();
else if (SeeLine.b.CntLeft) turn_left();
else if (SeeLine.b.CntRight) turn_right();
else if (SeeLine.b.Right) spin_right();
else no_track();

}

# 108
void spin_left(void)
{
set_motor_speed(left, rev_fast, 0);
set_motor_speed(right, fast, 0);
}

void turn_left(void)
{
set_motor_speed(left, stop, 0);
set_motor_speed(right, fast, 0);
}
void straight_fwd(void)
{
set_motor_speed(left, fast, -35);
set_motor_speed(right, fast, 185);
}
void spin_right(void)
{
set_motor_speed(left, fast, 0);
set_motor_speed(right, rev_fast, 0);
}
void turn_right(void)
{
set_motor_speed(left, fast, 0);
set_motor_speed(right, stop, 0);
}
